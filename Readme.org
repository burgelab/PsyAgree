* PsyAgreeMat
PsyAgree is a Matlab m-file toolbox for computing decision variable from data collected in double-pass (or n-tuple-pass) forced-choice psychophysical experiments.

** Use
 #+begin_src octave
%% Generate Data
stdX=[7.5]/60; % standard
cmpX=[5.1540    6.3300    7.5000    8.6700    9.8460]/60; % comparisons
mu=[0; 0];
sigma=[0.8; 0.8]; % standard deviation
rho=[0.3];        % correlation
cr=[0];           % criteria
nTrlPerCmp=1000;  % number of trials per comparison

S=DVFitter.genData(nTrlPerCmp,stdX,cmpX,mu,sigma,rho,cr);

%% Set fitting options
Opts=DVFitter.getDefaults();
Opts.rhoFitInd=[1];
Opts.bCtrMu=true;
Opts.bCombineCmp=true;

Opts.modelType='RR';
Opts.stdFix=sigma;

%% Construct
dv=DVFitter.new(S.stdX,S.cmpX,S.RCmpChs, Opts);

%% Run
dv.run();

%% print results
dv.printResults();
 #+end_src
XXX plot

** Main Methods
*** DVFitter.new
~obj=DVFitter.new(stdX,cmpX,RmpChs,Opts)~

Construct DVFitter object

**** Positional Arguments
 #+begin_src
| stdX    | [t x 1]     | standard values                               |
| cmpX    | [t x 1]     | comparison values                             |
| RcmpChs | [t x n x o] | response data where which interval was chosen |
 #+end_src
where ~t~ = number of tirals, ~n~ = number of passes, ~o~ = number of observers (for between observer correlation).
**** Named Arguments
##+begin_src
| modelType** | 'RMM'     | specifies model to be fit (see below)                                                       |
|             |           |                                                                                             |
| rhoFitInd*  | []        | correlation parameter group indices (see below)                                             |
| stdFitInd*  | []        | standard devitaion parameter group indices                                                  |
| muFitInd*   | []        | mean parameter group indices                                                                |
| crFitInd*   | []        | criterion parameter group indices                                                           |
|             |           |                                                                                             |
| rhoFix*     | []        | correlation parameter fixed values (off diagonal of normalized covaraince matrix)           |
| stdFix*     | []        | standard deviation parameter fixed values (diagonal of the un-normalized covariance matrix) |
| muFix*      | []        | mean parameter fixed values                                                                 |
| crFix*      | []        | criterion parameter fixed values                                                            |
|             |           |                                                                                             |
| bCombineCmp | true      | true = fit using all comparisons data, false = fit for each comparison individually.        |
| bCtrMu      | true      | Whether to mu at relative to standards (mu=mu-std).                                         |
| bObs        | false     | Whether between observer correlation (XXX 3rd dim?)                                         |
| nSplit      | 0         | Number of times to split XXX                                                                |
| bNoFit      | false     | Run parameters through model, but don't fit.                                                |
| cls         | 'double'  | Data type to cast data and model as.                                                        |
|             |           |                                                                                             |
| nBoot       | 1000      | number of bootstraps                                                                        |
| nBest       | 100       | fit nBest number of times and choose the one with the smallest negative likelihood          |
| minFuncType | 'fmincon' | fitting function                                                                            |
| bParallel   | false     | Use parallel                                                                                |
| bootSeed    | 1         | random seed to use for bootstrap sampling                                                   |
| bootCIPrcnt | 68.27     | Confidence interval                                                                         |
| bProg       | true      | print progress                                                                              |
 #+end_src

**modelType is a shorthand method for specifying which paramters are to be fit (see *FitInd below) and also allows for specifying special models.
Special models include
| 'E' | (E)xternal components model for 4-pass data only |
| 'F' | (F)ake External componenents model               |

+FitInd variables are vectors with values i numbered from 0 to k, where k is the number of unique dimensions of the parameter to be fit. The ith value corresponds to the ith dimension of the parameter.  If the ith value is set to 0, the ith dimension of the respective parameter is set to be fixed to the value set by the respective *Fix variable. If set to a value >0, then the ith dimension will be fit. If more than value are equal and non-zero, then all dimensions will be fit as a single value.

Examples:
#+begin_src octave
         %% 4D mu parameter where each dimension is fit
         muFitInd=[1 2 3 4]
         muFix=[]

         %% 4D mu parameter where the first and last dimensions are fixed to be zero
         muFix=[0 1 2 0]
         muFix=[0 0]

         %% 4D mu parameter where the first and last dimensions are fixed to be 0 and 1 respectively and the 2nd and 3rd are both fit but must take on the same value
         muFix=[0 1 1 0]
         muFix=[0 1]
#+end_src

 std, mu, cr variables have n values equal to the number of passes

 rho variables have m values equal to ~(nQuad-nPass)/2~ for XXX otherwise ~(nQuad-nPass)/2 + nPass~, where ~nPass~ is the number of passes and ~nQuad~ is the number of orthants ~(n-ary^nPasses)~.

*** DVFitter.getDefaults
Opts=DVFitter.getDefaults()~

Generate a struct with all options (see Struct Arguments above) and their default values

*** DVFitter.genData
~DVFitter.genData(stdX,cmpX,mu,sigma,rho,cr,nTrlPerCmp)~

Generate example data.

*** obj.run
~obj.run(bProg)~

Fit best and/or boot as specified.

*** obj.safe_run
~obj.safe_run(bProg)~

obj.run, but robust to errors.

*** obj.cont
~obj.cont(bProg)~

Continue fitting after an error or interruption (e.g. ctrl-c)

*** obj.printResults
~obj.printResults()~

Prints fitted results in a table format
